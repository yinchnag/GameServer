// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.9
// source: Protocol.proto

package PB

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type C2S_Player int32

const (
	C2S_Player_c2s_player_      C2S_Player = 0
	C2S_Player_c2s_player_login C2S_Player = 1 // 登录协议
)

// Enum value maps for C2S_Player.
var (
	C2S_Player_name = map[int32]string{
		0: "c2s_player_",
		1: "c2s_player_login",
	}
	C2S_Player_value = map[string]int32{
		"c2s_player_":      0,
		"c2s_player_login": 1,
	}
)

func (x C2S_Player) Enum() *C2S_Player {
	p := new(C2S_Player)
	*p = x
	return p
}

func (x C2S_Player) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (C2S_Player) Descriptor() protoreflect.EnumDescriptor {
	return file_Protocol_proto_enumTypes[0].Descriptor()
}

func (C2S_Player) Type() protoreflect.EnumType {
	return &file_Protocol_proto_enumTypes[0]
}

func (x C2S_Player) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use C2S_Player.Descriptor instead.
func (C2S_Player) EnumDescriptor() ([]byte, []int) {
	return file_Protocol_proto_rawDescGZIP(), []int{0}
}

type S2C_Player int32

const (
	S2C_Player_S2C_Player_      S2C_Player = 0
	S2C_Player_s2c_player_error S2C_Player = 1
	S2C_Player_s2c_player_login S2C_Player = 2
)

// Enum value maps for S2C_Player.
var (
	S2C_Player_name = map[int32]string{
		0: "S2C_Player_",
		1: "s2c_player_error",
		2: "s2c_player_login",
	}
	S2C_Player_value = map[string]int32{
		"S2C_Player_":      0,
		"s2c_player_error": 1,
		"s2c_player_login": 2,
	}
)

func (x S2C_Player) Enum() *S2C_Player {
	p := new(S2C_Player)
	*p = x
	return p
}

func (x S2C_Player) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (S2C_Player) Descriptor() protoreflect.EnumDescriptor {
	return file_Protocol_proto_enumTypes[1].Descriptor()
}

func (S2C_Player) Type() protoreflect.EnumType {
	return &file_Protocol_proto_enumTypes[1]
}

func (x S2C_Player) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use S2C_Player.Descriptor instead.
func (S2C_Player) EnumDescriptor() ([]byte, []int) {
	return file_Protocol_proto_rawDescGZIP(), []int{1}
}

type C2S_Player_Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  []byte `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   // 账号
	Password []byte `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
}

func (x *C2S_Player_Login) Reset() {
	*x = C2S_Player_Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_Player_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_Player_Login) ProtoMessage() {}

func (x *C2S_Player_Login) ProtoReflect() protoreflect.Message {
	mi := &file_Protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_Player_Login.ProtoReflect.Descriptor instead.
func (*C2S_Player_Login) Descriptor() ([]byte, []int) {
	return file_Protocol_proto_rawDescGZIP(), []int{0}
}

func (x *C2S_Player_Login) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *C2S_Player_Login) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

type S2C_Player_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误码
	ErrorMsg  []byte `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`     // 错误信息
}

func (x *S2C_Player_Error) Reset() {
	*x = S2C_Player_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_Player_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_Player_Error) ProtoMessage() {}

func (x *S2C_Player_Error) ProtoReflect() protoreflect.Message {
	mi := &file_Protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_Player_Error.ProtoReflect.Descriptor instead.
func (*S2C_Player_Error) Descriptor() ([]byte, []int) {
	return file_Protocol_proto_rawDescGZIP(), []int{1}
}

func (x *S2C_Player_Error) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *S2C_Player_Error) GetErrorMsg() []byte {
	if x != nil {
		return x.ErrorMsg
	}
	return nil
}

type S2C_Player_Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId        uint32  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`                              // 区服id
	Account         []byte  `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`                                                 // 账号
	UserId          []byte  `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                     // 账号ID
	Uid             uint64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`                                                        // 玩家唯一ID
	Uname           []byte  `protobuf:"bytes,5,opt,name=uname,proto3" json:"uname,omitempty"`                                                     // 玩家角色名
	Iconid          uint32  `protobuf:"varint,6,opt,name=iconid,proto3" json:"iconid,omitempty"`                                                  // 头像ID
	Exp             uint32  `protobuf:"varint,7,opt,name=exp,proto3" json:"exp,omitempty"`                                                        // 玩家经验值
	Level           uint32  `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`                                                    // 玩家等级
	Regtime         int64   `protobuf:"varint,9,opt,name=regtime,proto3" json:"regtime,omitempty"`                                                // 角色创建时间
	Sex             uint32  `protobuf:"varint,10,opt,name=sex,proto3" json:"sex,omitempty"`                                                       // 玩家性别: 0未设置，1男, 2女
	Vip             uint32  `protobuf:"varint,11,opt,name=vip,proto3" json:"vip,omitempty"`                                                       // Vip等级
	VipExp          uint32  `protobuf:"varint,12,opt,name=vip_exp,json=vipExp,proto3" json:"vip_exp,omitempty"`                                   // vip经验
	PowerUptime     int64   `protobuf:"varint,14,opt,name=power_uptime,json=powerUptime,proto3" json:"power_uptime,omitempty"`                    // 下次体力恢复时间
	Fight           int64   `protobuf:"varint,15,opt,name=fight,proto3" json:"fight,omitempty"`                                                   // 战斗力
	GameServerTime  int64   `protobuf:"varint,16,opt,name=game_server_time,json=gameServerTime,proto3" json:"game_server_time,omitempty"`         // 服务器时间
	Token           []byte  `protobuf:"bytes,17,opt,name=token,proto3" json:"token,omitempty"`                                                    // 登录令牌
	RenameNum       uint32  `protobuf:"varint,18,opt,name=rename_num,json=renameNum,proto3" json:"rename_num,omitempty"`                          // 改名次数
	ZoneOffset      int32   `protobuf:"varint,19,opt,name=zone_offset,json=zoneOffset,proto3" json:"zone_offset,omitempty"`                       // 时区偏移
	OpenTime        int64   `protobuf:"varint,20,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`                             // 开服时间
	FavoriteDay1    int64   `protobuf:"varint,21,opt,name=favorite_day1,json=favoriteDay1,proto3" json:"favorite_day1,omitempty"`                 // 当日总数
	FavoriteDay2    int64   `protobuf:"varint,22,opt,name=favorite_day2,json=favoriteDay2,proto3" json:"favorite_day2,omitempty"`                 // 昨日总数
	FavoriteCount   uint32  `protobuf:"varint,23,opt,name=favorite_count,json=favoriteCount,proto3" json:"favorite_count,omitempty"`              // 剩余点赞次数
	LastOfflineTime int64   `protobuf:"varint,24,opt,name=last_offline_time,json=lastOfflineTime,proto3" json:"last_offline_time,omitempty"`      // 上次离线时间
	FavoritePlayers []int64 `protobuf:"varint,25,rep,packed,name=favorite_players,json=favoritePlayers,proto3" json:"favorite_players,omitempty"` // 点赞玩家列表
}

func (x *S2C_Player_Login) Reset() {
	*x = S2C_Player_Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_Player_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_Player_Login) ProtoMessage() {}

func (x *S2C_Player_Login) ProtoReflect() protoreflect.Message {
	mi := &file_Protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_Player_Login.ProtoReflect.Descriptor instead.
func (*S2C_Player_Login) Descriptor() ([]byte, []int) {
	return file_Protocol_proto_rawDescGZIP(), []int{2}
}

func (x *S2C_Player_Login) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *S2C_Player_Login) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *S2C_Player_Login) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *S2C_Player_Login) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *S2C_Player_Login) GetUname() []byte {
	if x != nil {
		return x.Uname
	}
	return nil
}

func (x *S2C_Player_Login) GetIconid() uint32 {
	if x != nil {
		return x.Iconid
	}
	return 0
}

func (x *S2C_Player_Login) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *S2C_Player_Login) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *S2C_Player_Login) GetRegtime() int64 {
	if x != nil {
		return x.Regtime
	}
	return 0
}

func (x *S2C_Player_Login) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *S2C_Player_Login) GetVip() uint32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *S2C_Player_Login) GetVipExp() uint32 {
	if x != nil {
		return x.VipExp
	}
	return 0
}

func (x *S2C_Player_Login) GetPowerUptime() int64 {
	if x != nil {
		return x.PowerUptime
	}
	return 0
}

func (x *S2C_Player_Login) GetFight() int64 {
	if x != nil {
		return x.Fight
	}
	return 0
}

func (x *S2C_Player_Login) GetGameServerTime() int64 {
	if x != nil {
		return x.GameServerTime
	}
	return 0
}

func (x *S2C_Player_Login) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *S2C_Player_Login) GetRenameNum() uint32 {
	if x != nil {
		return x.RenameNum
	}
	return 0
}

func (x *S2C_Player_Login) GetZoneOffset() int32 {
	if x != nil {
		return x.ZoneOffset
	}
	return 0
}

func (x *S2C_Player_Login) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *S2C_Player_Login) GetFavoriteDay1() int64 {
	if x != nil {
		return x.FavoriteDay1
	}
	return 0
}

func (x *S2C_Player_Login) GetFavoriteDay2() int64 {
	if x != nil {
		return x.FavoriteDay2
	}
	return 0
}

func (x *S2C_Player_Login) GetFavoriteCount() uint32 {
	if x != nil {
		return x.FavoriteCount
	}
	return 0
}

func (x *S2C_Player_Login) GetLastOfflineTime() int64 {
	if x != nil {
		return x.LastOfflineTime
	}
	return 0
}

func (x *S2C_Player_Login) GetFavoritePlayers() []int64 {
	if x != nil {
		return x.FavoritePlayers
	}
	return nil
}

var File_Protocol_proto protoreflect.FileDescriptor

var file_Protocol_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x43, 0x32, 0x53, 0x5f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x48,
	0x0a, 0x10, 0x43, 0x32, 0x53, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4e, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x5f,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xbf, 0x05, 0x0a, 0x10, 0x53, 0x32, 0x43,
	0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x63, 0x6f, 0x6e, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x63, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x76, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x69, 0x70, 0x45, 0x78, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x64,
	0x61, 0x79, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x44, 0x61, 0x79, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x44, 0x61, 0x79, 0x32, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2a, 0x33, 0x0a, 0x0a, 0x43, 0x32,
	0x53, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x32, 0x73, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x63, 0x32, 0x73,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x2a,
	0x49, 0x0a, 0x0a, 0x53, 0x32, 0x43, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x32, 0x43, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x73, 0x32, 0x63, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x73, 0x32, 0x63, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x02, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f,
	0x3b, 0x50, 0x42, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Protocol_proto_rawDescOnce sync.Once
	file_Protocol_proto_rawDescData = file_Protocol_proto_rawDesc
)

func file_Protocol_proto_rawDescGZIP() []byte {
	file_Protocol_proto_rawDescOnce.Do(func() {
		file_Protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_Protocol_proto_rawDescData)
	})
	return file_Protocol_proto_rawDescData
}

var file_Protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_Protocol_proto_goTypes = []interface{}{
	(C2S_Player)(0),          // 0: C2S_Protocol.C2S_Player
	(S2C_Player)(0),          // 1: C2S_Protocol.S2C_Player
	(*C2S_Player_Login)(nil), // 2: C2S_Protocol.C2S_Player_Login
	(*S2C_Player_Error)(nil), // 3: C2S_Protocol.S2C_Player_Error
	(*S2C_Player_Login)(nil), // 4: C2S_Protocol.S2C_Player_Login
}
var file_Protocol_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Protocol_proto_init() }
func file_Protocol_proto_init() {
	if File_Protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_Player_Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_Player_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_Player_Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Protocol_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Protocol_proto_goTypes,
		DependencyIndexes: file_Protocol_proto_depIdxs,
		EnumInfos:         file_Protocol_proto_enumTypes,
		MessageInfos:      file_Protocol_proto_msgTypes,
	}.Build()
	File_Protocol_proto = out.File
	file_Protocol_proto_rawDesc = nil
	file_Protocol_proto_goTypes = nil
	file_Protocol_proto_depIdxs = nil
}
